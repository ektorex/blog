CREATE TABLE users (
    user_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(100) NOT NULL,
    email       VARCHAR2(150) UNIQUE NOT NULL
);

CREATE TABLE articles (
    article_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     NUMBER NOT NULL,
    title       VARCHAR2(200) NOT NULL,
    pub_date    DATE DEFAULT SYSDATE,
    text        CLOB NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);


CREATE TABLE comments (
    comment_id  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    article_id  NUMBER NOT NULL,
    user_id     NUMBER NOT NULL,
    name        VARCHAR2(100) NOT NULL,
    url         VARCHAR2(200),
    fecha_comentario    DATE DEFAULT SYSDATE,
    FOREIGN KEY (article_id) REFERENCES articles(article_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

CREATE TABLE tags (
    tag_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(100) NOT NULL UNIQUE,
    url         VARCHAR2(200)
);

CREATE TABLE categories (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR2(100) NOT NULL UNIQUE,
    url         VARCHAR2(200)
);

-- Relación N:M articles <-> tags
CREATE TABLE article_tags (
    article_id  NUMBER NOT NULL,
    tag_id      NUMBER NOT NULL,
    PRIMARY KEY (article_id, tag_id),
    FOREIGN KEY (article_id) REFERENCES articles(article_id),
    FOREIGN KEY (tag_id) REFERENCES tags(tag_id)
);

-- Relación N:M articles <-> categories
CREATE TABLE article_categories (
    article_id   NUMBER NOT NULL,
    category_id  NUMBER NOT NULL,
    PRIMARY KEY (article_id, category_id),
    FOREIGN KEY (article_id) REFERENCES articles(article_id),
    FOREIGN KEY (category_id) REFERENCES categories(category_id)
);




